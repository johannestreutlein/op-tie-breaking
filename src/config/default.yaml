# --- Defaults ---

# --- pymarl options ---
runner: "episode" # Runs 1 env for an episode
mac: "basic_mac" # Basic controller
#env: "sc2" # Environment name
env_args: {} # Arguments for the environment
#batch_size_run: 1 # Number of environments to run in parallel
test_nepisode: 256 # Number of episodes to test for
test_interval: 200000 # Test after {} timesteps have passed
test_greedy: False # Use greedy evaluation (if False, will set epsilon floor to 0
log_interval: 200000 # Log summary of stats after every {} timesteps
runner_log_interval: 200000 # Log runner stats (not test stats) every {} timesteps
learner_log_interval: 200000 # Log training stats every {} timesteps
use_cuda: True # Use gpu by default unless it isn't available
buffer_cpu_only: True # If true we won't keep all of the replay buffer in vram

# --- Logging options ---
use_tensorboard: True # Log results to tensorboard
save_model: True # Save the models to disk
save_model_interval: 1000000 # Save models after this many timesteps
load_step: 0 # Load model trained on this many timesteps (0 if choose max possible)
save_replay: False # Saving the replay of the model loaded from checkpoint_path
local_results_path: "results" # Path for local results

# Evaluate model for test_nepisode episodes and quit (no training)
# Also needs to be True for cross-play evaluation (see below)
evaluate: False

checkpoint_path: "" # Load a single checkpoint from this path --- for training or non-cross-play evaluation, and saving episodes

#True to save a file with histories produced by the agent from checkpoint_path
save_episodes: False

#cross play evaluation between the list of models below (requires evaluate to be True to have an effect)
cross_play: False
#how many seeds are compared at once in cross play evaluation (i.e. number of columns/rows of the calculated matrix)
n_seeds_per_run: 0

#append the model path to this csv file if training a new model,
#or load dataframe with model pahts from this csv file for cross-play evaluation. does nothing if empty string
model_paths: ""

#set the random seeds
#seed: 0

#Whether to compute tie-breaking values in evaluation
calculate_hash: False

#If this is True, it means you go through the models in the file
#checkpoint_paths but only do self-play evaluation.
#a bit confusing, but this requires cross_play to be True
#(since otherwise we don't go through the models in the path
only_self_play: False

# --- RL hyperparameters ---
#gamma: 0.99
gamma: 1
#batch_size: 256 # Number of episodes to train on
#buffer_size: 256 # Size of the replay buffer
lr: 0.0005 # Learning rate for agents
critic_lr: 0.0005 # Learning rate for critics
optim_alpha: 0.99 # RMSProp alpha
optim_eps: 0.00001 # RMSProp epsilon
grad_norm_clip: 10 # Reduce magnitude of gradients above this L2 norm

# --- Agent parameters ---
agent: "rnn" # Default rnn agent
rnn_hidden_dim: 64 # Size of hidden state for default rnn agent

# --- Experiment running params ---
repeat_id: 1
label: "default_label"

# --- Sacred mongodb credentials ---
#db_url: #mongodb://pymarlOwner:EMC7Jp98c8rE7FxxN7g82DT5spGsVr9A@gandalf.cs.ox.ac.uk:27017/pymarl
#db_name: #pymarl
#no-mongo: True

hash_hidden_dim: 32 #hidden dimension of the network that calculates hash functions
hash_function_seeds: [] #list of seeds for hash function initialization
hash_type: "nn" #type of hash function